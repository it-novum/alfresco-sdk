<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>${artifactId}</artifactId>
    <name>Integration Tests Module</name>
    <description>Integration Tests module for in-container integration testing - part of AIO - SDK 4.0</description>
    <packaging>jar</packaging> <!-- Note. this just runs Integration Tests, but it needs to be a JAR otherwise
                                            nothing is compiled (i.e. you cannot set it to pom) -->

    <parent>
        <groupId>${groupId}</groupId>
        <artifactId>${rootArtifactId}</artifactId>
        <version>${version}</version>
    </parent>

    <properties>
    </properties>

    <dependencies>
        <!-- Dependencies required to run container -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-mmt</artifactId>
            <scope>runtime</scope>
        </dependency>    
        <!-- Bring in any custom module that should be tested, by default we bring in the Platform JAR module
             that is generated for the AIO project -->
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>${rootArtifactId}-platform</artifactId>
            <version>${version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Alfresco-RAD is required for Alfresco IT testing -->
        <dependency>
            <groupId>org.alfresco.maven</groupId>
            <artifactId>alfresco-rad</artifactId>
            <version>${alfresco.sdk.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Add any additional test dependencies with test scope -->
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>

            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <configuration>
                    <rebelXmlDirectory>${project.build.testOutputDirectory}</rebelXmlDirectory>
                </configuration>
            </plugin>

            <!-- Make sure we attach the tests so we can include them when running -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Runs the integration tests, any class that follows naming convention
                 "**/IT*.java", "**/*IT.java", and "**/*ITCase.java" will be considered an integration test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <acs.endpoint.path>${test.acs.endpoint.path}</acs.endpoint.path>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-acs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${alfresco.groupId}</groupId>
                                    <artifactId>${alfresco.platform.war}</artifactId>
                                    <version>${alfresco.platform.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/alfresco</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-share</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${alfresco.groupId}</groupId>
                                    <artifactId>share</artifactId>
                                    <version>${alfresco.share.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/share</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>collect-acs-extensions</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${groupId}</groupId>
                                    <artifactId>${rootArtifactId}-platform</artifactId>
                                    <version>${version}</version>
                                    <!-- Make it AMP if you want to use additional libraries. -->
                                    <!--  type>amp</type -->
                                </artifactItem>
                                <artifactItem>
                                    <groupId>${alfresco.groupId}</groupId>
                                    <artifactId>alfresco-share-services</artifactId>
                                    <version>${alfresco.share.version}</version>
                                    <type>amp</type>
                                </artifactItem>
                                <!-- ********************************************************** -->
                                <!-- Add any additional platform extensions you want to deploy. -->
                                <!-- ********************************************************** -->
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/extensions_acs</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>collect-share-extensions</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${groupId}</groupId>
                                    <artifactId>${rootArtifactId}-share</artifactId>
                                    <version>${version}</version>                                
                                    <!-- Make it AMP if you want to use additional libraries. -->
                                    <!--  type>amp</type -->
                                </artifactItem>
                                <!-- ******************************************************* -->
                                <!-- Add any additional share extensions you want to deploy. -->
                                <!-- ******************************************************* -->
                            </artifactItems>
                            <outputDirectory>${project.build.directory}/extensions_share</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deploy-IT-artifacts</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>tests</classifier>
                                </artifactItem>
                            </artifactItems>
                            <excludeScope>compile</excludeScope>
                            <excludeGroupIds>org.springframework</excludeGroupIds>
                            <outputDirectory>${project.build.directory}/alfresco/WEB-INF/lib/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        
            <!-- Apply AMPS -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>apply-acs-amps</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath>
                                    <dependency>org.alfresco:alfresco-mmt</dependency>
                                </classpath>
                                <argument>org.alfresco.repo.module.tool.ModuleManagementTool</argument>
                                <argument>install</argument>
                                <argument>${project.build.directory}/extensions_acs</argument>
                                <argument>${project.build.directory}/alfresco</argument>
                                <argument>-directory</argument>
                                <argument>-nobackup</argument>
                                <argument>-force</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>apply-share-amps</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath>
                                    <dependency>org.alfresco:alfresco-mmt</dependency>
                                </classpath>
                                <argument>org.alfresco.repo.module.tool.ModuleManagementTool</argument>
                                <argument>install</argument>
                                <argument>${project.build.directory}/extensions_share</argument>
                                <argument>${project.build.directory}/share</argument>
                                <argument>-directory</argument>
                                <argument>-nobackup</argument>
                                <argument>-force</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Prepare resources and copy JAR extensions -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-and-filter-tomcat-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/tomcat-resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/tomcat</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-jar-acs-extensions</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/alfresco/WEB-INF/lib/</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/extensions_acs</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-jar-share-extensions</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/share/WEB-INF/lib/</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/extensions_share</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Prepare Docker Environment -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <alias>dockerhost</alias>
                            <name>%a-dockerhost:%v</name>
                            <build>
                                <from>qoomon/docker-host</from>
                            </build>
                            <run>
                                <capAdd>
                                    <add>NET_ADMIN</add>
                                    <add>NET_RAW</add>
                                </capAdd>
                                <network>
                                    <name>${alf.docker.network}</name>
                                    <alias>dockerhost</alias>
                                </network>
                            </run>
                        </image>
                        <image>
                            <alias>database</alias>
                            <name>%a-database:%v</name>
                            <build>
                                <from>postgres:9.6</from>
                                <env>
                                    <POSTGRES_DB>alfresco</POSTGRES_DB>
                                    <POSTGRES_USER>alfresco</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>alfresco</POSTGRES_PASSWORD>
                                </env>
                                <entryPoint>docker-entrypoint.sh postgres -c max_connections=300 -c log_min_messages=LOG</entryPoint>
                            </build>
                            <run>
                                <network>
                                    <name>${alf.docker.network}</name>
                                    <alias>database</alias>
                                </network>
                                <ports>
                                    <port>${postgres.port}:5432</port>
                                </ports>
                                <user>postgres</user>
                                <volumes>
                                    <bind>
                                        <volume>db-volume-aiotomcat1:/var/lib/postgresql/data</volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                        <image>
                            <alias>ass</alias>
                            <name>%a-ass:%v</name>
                            <build>
                                <from>alfresco/alfresco-search-services:1.2.0</from>
                                <env>
                                    <SOLR_ALFRESCO_HOST>${alf.docker.host.internal}</SOLR_ALFRESCO_HOST>
                                    <SOLR_ALFRESCO_PORT>${acs.port}</SOLR_ALFRESCO_PORT>
                                    <SOLR_SOLR_HOST>localhost</SOLR_SOLR_HOST>
                                    <SOLR_SOLR_PORT>8983</SOLR_SOLR_PORT>
                                    <SOLR_CREATE_ALFRESCO_DEFAULTS>alfresco,archive</SOLR_CREATE_ALFRESCO_DEFAULTS>
                                </env>
                            </build>
                            <run>
                                <network>
                                    <name>${alf.docker.network}</name>
                                    <alias>ass</alias>
                                </network>
                                <ports>
                                    <port>${solr.port}:8983</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>ass-volume-aiotomcat1:/opt/alfresco-search-services/contentstore</volume>
                                        <volume>ass-volume-aiotomcat1:/opt/alfresco-search-services/data</volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                    </images>
                    <volumes>
                        <volume>
                            <name>db-volume-aiotomcat1</name>
                        </volume>
                        <volume>
                            <name>ass-volume-aiotomcat1</name>
                        </volume>
                    </volumes>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-docker</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>stop</goal>
                            <goal>remove</goal>
                            <goal>volume-remove</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start-docker-for-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>volume-create</goal>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-docker-for-tests</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Prepare Tomcat Environment -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                    <container>
                        <containerId>${container.type}</containerId>
                        <timeout>${container.start.timeout}</timeout>
                        <zipUrlInstaller>
                            <url>${container.installer.url}</url>
                        </zipUrlInstaller>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <classpath>shared</classpath>
                            </dependency>
                        </dependencies>
                    </container>
                    <configuration>
                        <type>standalone</type>
                        <home>${project.build.directory}/tomcat</home>
                        <configfiles>
                            <configfile>
                                <file>${project.build.directory}/tomcat-resources/shared</file>
                                <todir>shared</todir>
                            </configfile>
                            <configfile>
                                <file>${project.build.directory}/tomcat-resources/webapps</file>
                                <todir>webapps</todir>
                            </configfile>
                        </configfiles>
                        <files>
                            <file>
                                <file>${basedir}/src/main/tomcat/license</file>
                                <todir>webapps/alfresco/WEB-INF/classes/alfresco/extension</todir>
                            </file>
                        </files>
                        <properties>
                            <cargo.servlet.port>${container.port}</cargo.servlet.port>
                        </properties>
                    </configuration>
                    <deployables>
                        <deployable>
                            <groupId>com.itnovum.experiments</groupId>
                            <artifactId>aiotomcat1-bundle</artifactId>
                            <type>war</type>
                            <location>${project.build.directory}/alfresco</location>
                            <properties>
                                <context>alfresco</context>
                            </properties>
                        </deployable>
                        <deployable>
                            <groupId>com.itnovum.experiments</groupId>
                            <artifactId>aiotomcat1-bundle</artifactId>
                            <type>war</type>
                            <location>${project.build.directory}/share</location>
                            <properties>
                                <context>share</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>
                <executions>
                    <execution>
                        <id>start-tomcat-for-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-tomcat-for-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
