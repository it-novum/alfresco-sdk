<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>${artifactId}</artifactId>
    <name>Integration Tests Module</name>
    <description>Integration Tests module for in-container integration testing - part of AIO - SDK 4.0</description>
    <packaging>jar</packaging> <!-- Note. this just runs Integration Tests, but it needs to be a JAR otherwise
                                            nothing is compiled (i.e. you cannot set it to pom) -->

    <parent>
        <groupId>${groupId}</groupId>
        <artifactId>${rootArtifactId}</artifactId>
        <version>${version}</version>
    </parent>

    <properties>
        <acs.deploy.directory>${project.parent.basedir}/${project.parent.artifactId}-platform-docker/target/extensions</acs.deploy.directory>
    </properties>

    <dependencies>
        <!-- Bring in any custom module that should be tested, by default we bring in the Platform JAR module
             that is generated for the AIO project -->
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>${rootArtifactId}-platform</artifactId>
            <version>${version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>

            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <configuration>
                    <rebelXmlDirectory>${project.build.testOutputDirectory}</rebelXmlDirectory>
                </configuration>
            </plugin>

            <!-- Make sure we attach the tests so we can include them when running -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Runs the integration tests, any class that follows naming convention
                 "**/IT*.java", "**/*IT.java", and "**/*ITCase.java" will be considered an integration test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <acs.endpoint.path>${test.acs.endpoint.path}</acs.endpoint.path>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- Collecting artifacts required for integration tests that needs to be deployed to ACS -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>deploy-IT-artifacts</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy</goal>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>tests</classifier>
                                </artifactItem>
                            </artifactItems>
                            <excludeScope>compile</excludeScope>
                            <excludeGroupIds>org.springframework</excludeGroupIds>
                            <excludeArtifactIds>postgresql,alfresco-mmt,${project.parent.artifactId}-platform</excludeArtifactIds>
                            <outputDirectory>${acs.deploy.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
                            
            <!-- Automated invocation of docker start/stop for integration tests -->
            <plugin>
                <artifactId>maven-invoker-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <pom>${project.parent.basedir}/pom.xml</pom>
                    <streamLogs>true</streamLogs>
                    <properties>
                        <local>${local}</local>
                    </properties>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-IT-env</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <goals>
                                <goal>exec:exec@start-docker</goal>
                            </goals>
                        </configuration>
                    </execution>
                    <execution>
                        <id>clean-IT-env</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <goals>
                                <goal>exec:exec@stop-docker</goal>
                            </goals>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local-deploy</id>
            <activation>
                <property>
                    <name>local</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <alfresco.platform.war>content-services-community</alfresco.platform.war>
                <share.port>${acs.port}</share.port>
                <acs.host>localhost</acs.host>
                <container.type>tomcat8x</container.type>
                <container.installer.url>https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.28/bin/apache-tomcat-8.5.28.zip</container.installer.url>
                <container.start.timeout>480000</container.start.timeout>
                <container.port>${acs.port}</container.port>
                <container.jvmargs.agentpath></container.jvmargs.agentpath>
                <container.jvmargs.debug></container.jvmargs.debug>
                <acs.deploy.directory>${project.build.directory}/alfresco/WEB-INF/lib/</acs.deploy.directory>
            </properties>
            <dependencies>
                <!-- Dependencies required to run container -->
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>42.2.1</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>org.alfresco</groupId>
                    <artifactId>alfresco-mmt</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-acs</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${alfresco.groupId}</groupId>
                                            <artifactId>${alfresco.platform.war}</artifactId>
                                            <version>${alfresco.platform.version}</version>
                                            <type>war</type>
                                            <overWrite>true</overWrite>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/alfresco</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>unpack-share</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${alfresco.groupId}</groupId>
                                            <artifactId>share</artifactId>
                                            <version>${alfresco.share.version}</version>
                                            <type>war</type>
                                            <overWrite>true</overWrite>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/share</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>collect-acs-extensions</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.parent.artifactId}-platform</artifactId>
                                            <version>${project.version}</version>
                                            <!-- Make it AMP if you want to use additional libraries. -->
                                            <!-- type>amp</type -->
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>${alfresco.groupId}</groupId>
                                            <artifactId>alfresco-share-services</artifactId>
                                            <version>${alfresco.share.version}</version>
                                            <type>amp</type>
                                        </artifactItem>
                                        <!-- ********************************************************** -->
                                        <!-- Add any additional platform extensions you want to deploy. -->
                                        <!-- ********************************************************** -->
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/extensions_acs</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>collect-share-extensions</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.parent.artifactId}-share</artifactId>
                                            <version>${project.version}</version>
                                            <!-- Make it AMP if you want to use additional libraries. -->
                                            <!-- type>amp</type -->
                                        </artifactItem>
                                        <!-- ******************************************************* -->
                                        <!-- Add any additional share extensions you want to deploy. -->
                                        <!-- ******************************************************* -->
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/extensions_share</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Apply AMPS -->
                    <!-- NOTE: 
                         If you want the amps to be applied in a specific order, reconfigure the following 
                         executions to apply amps one by one by name and not using whole directories.
                     -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>apply-acs-amps</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>java</executable>
                                    <skip>false</skip>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath>
                                            <dependency>org.alfresco:alfresco-mmt</dependency>
                                        </classpath>
                                        <argument>org.alfresco.repo.module.tool.ModuleManagementTool</argument>
                                        <argument>install</argument>
                                        <argument>${project.build.directory}/extensions_acs</argument>
                                        <argument>${project.build.directory}/alfresco</argument>
                                        <argument>-directory</argument>
                                        <argument>-nobackup</argument>
                                        <argument>-force</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>apply-share-amps</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip>
                                    <executable>java</executable>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath>
                                            <dependency>org.alfresco:alfresco-mmt</dependency>
                                        </classpath>
                                        <argument>org.alfresco.repo.module.tool.ModuleManagementTool</argument>
                                        <argument>install</argument>
                                        <argument>${project.build.directory}/extensions_share</argument>
                                        <argument>${project.build.directory}/share</argument>
                                        <argument>-directory</argument>
                                        <argument>-nobackup</argument>
                                        <argument>-force</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Prepare resources and copy JAR extensions -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-and-filter-tomcat-shared-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/tomcat-shared-resources</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/tomcat/shared</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-and-filter-tomcat-alfresco-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/alfresco</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/tomcat/webapps/alfresco</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-alfresco-license</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/alfresco/WEB-INF/classes/alfresco/extension/license</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/tomcat/license</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-and-filter-tomcat-share-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/share</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/tomcat/webapps/share</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-jar-acs-extensions</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/alfresco/WEB-INF/lib/</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/extensions_acs</directory>
                                            <includes>
                                                <include>*.jar</include>
                                            </includes>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-jar-share-extensions</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/share/WEB-INF/lib/</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/extensions_share</directory>
                                            <includes>
                                                <include>*.jar</include>
                                            </includes>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Prepare Tomcat Environment -->
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <container>
                                <containerId>${container.type}</containerId>
                                <timeout>${container.start.timeout}</timeout>
                                <zipUrlInstaller>
                                    <url>${container.installer.url}</url>
                                </zipUrlInstaller>
                                <dependencies>
                                    <dependency>
                                        <groupId>org.postgresql</groupId>
                                        <artifactId>postgresql</artifactId>
                                        <classpath>shared</classpath>
                                    </dependency>
                                </dependencies>
                            </container>
                            <configuration>
                                <type>standalone</type>
                                <home>${project.build.directory}/tomcat</home>
                                <configfiles>
                                    <configfile>
                                        <file>${project.build.directory}/tomcat-shared-resources</file>
                                        <todir>shared</todir>
                                    </configfile>
                                </configfiles>
                                <properties>
                                    <cargo.logging>low</cargo.logging>
                                    <cargo.servlet.port>${container.port}</cargo.servlet.port>
                                    <cargo.tomcat.connector.maxHttpHeaderSize>65536</cargo.tomcat.connector.maxHttpHeaderSize>
                                    <cargo.start.jvmargs>${container.jvmargs.agentpath} ${container.jvmargs.debug}</cargo.start.jvmargs>
                                </properties>
                            </configuration>
                            <deployables>
                                <deployable>
                                    <groupId>${alfresco.groupId}</groupId>
                                    <artifactId>${alfresco.platform.war}</artifactId>
                                    <type>war</type>
                                    <location>${project.build.directory}/alfresco</location>
                                    <properties>
                                        <context>alfresco</context>
                                    </properties>
                                </deployable>
                                <deployable>
                                    <groupId>${alfresco.groupId}</groupId>
                                    <artifactId>share</artifactId>
                                    <type>war</type>
                                    <location>${project.build.directory}/share</location>
                                    <properties>
                                        <context>share</context>
                                    </properties>
                                </deployable>
                            </deployables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-tomcat-for-tests</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-tomcat-for-tests</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <id>jrebel</id>
            <activation>
                <property>
                    <name>current.jrebel.agent.path</name>
                </property>
            </activation>
            <properties>
                <container.jvmargs.agentpath>-agentpath:${current.jrebel.agent.path}</container.jvmargs.agentpath>
            </properties>
        </profile>
        <profile>
            <id>debug</id>
            <activation>
            </activation>
            <properties>
                <container.jvmargs.debug>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=localhost:${acs.debug.port}</container.jvmargs.debug>
            </properties>
        </profile>
    </profiles>
</project>
