<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>${artifactId}</artifactId>
    <name>Alfresco Platform/Repository Docker Module</name>
    <description>Platform/Repo Docker Module to generate the final Docker image</description>
    <packaging>jar</packaging>

    <parent>
        <groupId>${groupId}</groupId>
        <artifactId>${rootArtifactId}</artifactId>
        <version>${version}</version>
    </parent>

    <properties>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>${rootArtifactId}-platform</artifactId>
            <version>${version}</version>
        </dependency>
        <dependency>
            <groupId>${groupId}</groupId>
            <artifactId>${rootArtifactId}-integration-tests</artifactId>
            <version>${version}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <!-- Add any additional AMPs or extension JARs here that you want to be deployed in Alfresco -->
        <!-- IMPORTANT: 
             If using amp extensions only, add <includeTypes>amp</includeTypes> to the "collect-extensions" execution below.
             If using both amp and jar extensions, you have to add: 
                <exclusions>
                  <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                  </exclusion>
                </exclusions>
             to each amp dependency definition.
         -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Copy the repository extension and the dependencies required for execute integration tests -->
                    <execution>
                        <id>collect-test-artifacts</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/extensions</outputDirectory>
                            <excludeScope>compile</excludeScope>
                        </configuration>
                    </execution>
                    <!-- Collect extensions (JARs or AMPs) declared in this module do be deployed to docker -->
                    <execution>
                        <id>collect-extensions</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/extensions</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <!-- IMPORTANT: if using amp dependencies only, add <includeTypes>amp</includeTypes> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Filter the Dockerfile and the other files added to the container to be able to replace maven properties -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-and-filter-docker-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>**/*.jar</exclude>
                                        <exclude>**/*.so</exclude>
                                        <exclude>**/*.gz</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-and-filter-docker-resources-non-filtered</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>**/*.jar</include>
                                        <include>**/*.so</include>
                                        <include>**/*.gz</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <alias>acs</alias>
                            <name>%a-acs:%v</name>
                            <build>
                                <from>${docker.acs.image}:${alfresco.platform.version}</from>
                                <assembly>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.build.directory}/extensions</directory>
                                                <outputDirectory>tomcat/webapps/alfresco/WEB-INF/lib/</outputDirectory>
                                                <includes>
                                                    <include>*.jar</include>
                                                </includes>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.build.directory}/extensions</directory>
                                                <outputDirectory>tomcat/amps/</outputDirectory>
                                                <includes>
                                                    <include>*.amp</include>
                                                </includes>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.build.directory}/resources</directory>
                                                <outputDirectory>tomcat/shared/classes</outputDirectory>
                                                <includes>
                                                    <include>alfresco-global.properties</include>
                                                </includes>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.build.directory}/resources</directory>
                                                <outputDirectory>tomcat/shared/classes/alfresco/extension</outputDirectory>
                                                <includes>
                                                    <include>dev-log4j.properties</include>
                                                    <include>disable-webscript-caching-context.xml</include>
                                                </includes>
                                            </fileSet>
                                            <fileSet>
                                                <directory>${project.build.directory}/resources/license</directory>
                                                <outputDirectory>tomcat/shared/classes/alfresco/extension/license</outputDirectory>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                                <runCmds>
                                    <run>yes| /usr/bin/cp -r /maven/tomcat/* ${docker.tomcat.dir}/</run>
                                    <run>java -jar ${docker.tomcat.dir}/alfresco-mmt/alfresco-mmt*.jar install ${docker.tomcat.dir}/amps ${docker.tomcat.dir}/webapps/alfresco -directory -nobackup -force</run>
                                </runCmds>
                                <env>
                                    <CATALINA_OPTS>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:8888</CATALINA_OPTS>
                                </env>
                            </build>
                            <run>
                                <network>
                                    <name>${docker.network}</name>
                                    <alias>acs</alias>
                                </network>
                                <ports>
                                    <port>${acs.port}:8080</port>
                                    <port>${acs.debug.port}:8888</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>acs-volume:/usr/local/tomcat/alf_data</volume>
                                    </bind>
                                </volumes>
                                <dependsOn>
                                    <container>database</container>
                                </dependsOn>
                            </run>
                        </image>
                        <image>
                            <alias>database</alias>
                            <name>%a-database:%v</name>
                            <build>
                                <from>postgres:9.6</from>
                                <env>
                                    <POSTGRES_DB>alfresco</POSTGRES_DB>
                                    <POSTGRES_USER>alfresco</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>alfresco</POSTGRES_PASSWORD>
                                </env>
                                <entryPoint>docker-entrypoint.sh postgres -c max_connections=300 -c log_min_messages=LOG</entryPoint>
                            </build>
                            <run>
                                <network>
                                    <name>${docker.network}</name>
                                    <alias>database</alias>
                                </network>
                                <ports>
                                    <port>${postgres.port}:5432</port>
                                </ports>
                                <user>postgres</user>
                                <volumes>
                                    <bind>
                                        <volume>db-volume:/var/lib/postgresql/data</volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                        <image>
                            <alias>ass</alias>
                            <name>%a-ass:%v</name>
                            <build>
                                <from>alfresco/alfresco-search-services:1.2.0</from>
                                <env>
                                    <SOLR_ALFRESCO_HOST>acs</SOLR_ALFRESCO_HOST>
                                    <SOLR_ALFRESCO_PORT>8080</SOLR_ALFRESCO_PORT>
                                    <SOLR_SOLR_HOST>ass</SOLR_SOLR_HOST>
                                    <SOLR_SOLR_PORT>8983</SOLR_SOLR_PORT>
                                    <SOLR_CREATE_ALFRESCO_DEFAULTS>alfresco,archive</SOLR_CREATE_ALFRESCO_DEFAULTS>
                                </env>
                            </build>
                            <run>
                                <network>
                                    <name>${docker.network}</name>
                                    <alias>ass</alias>
                                </network>
                                <ports>
                                    <port>8983:8983</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>ass-volume:/opt/alfresco-search-services/contentstore</volume>
                                        <volume>ass-volume:/opt/alfresco-search-services/data</volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                    </images>
                    <volumes>
                        <volume>
                            <name>db-volume</name>
                        </volume>
                        <volume>
                            <name>acs-volume</name>
                        </volume>
                        <volume>
                            <name>ass-volume</name>
                        </volume>
                    </volumes>
                </configuration>
                <executions>
                    <execution>
                        <id>start-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-tests</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                      </execution>
                </executions>       
            </plugin>

            <!-- Runs the integration tests, any class that follows naming convention
                 "**/IT*.java", "**/*IT.java", and "**/*ITCase.java" will be considered an integration test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <acs.endpoint.path>${test.acs.endpoint.path}</acs.endpoint.path>
                    </systemPropertyVariables>
                    <dependenciesToScan>
                        <dependency>${groupId}:${rootArtifactId}-integration-tests</dependency>
                    </dependenciesToScan>     
                </configuration>
            </plugin>            
        </plugins>
    </build>
</project>
